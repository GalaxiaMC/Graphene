From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Satyrn <satyrn@disroot.org>
Date: Sat, 11 Dec 2021 03:25:00 +0000
Subject: [PATCH] Improve Defaults


diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
index 7b21391e5..93faf89aa 100644
--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
@@ -61,8 +61,8 @@ public class PaperWorldConfig {
         if (PaperConfig.version < 24) {
             needsSave = true;

-            set("despawn-ranges.soft", null);
-            set("despawn-ranges.hard", null);
+            set("despawn-ranges.soft", 28);
+            set("despawn-ranges.hard", 96);

             set("spawn-limits.monsters", null);
             set("spawn-limits.animals", null);
@@ -118,7 +118,7 @@ public class PaperWorldConfig {
         wanderingTraderSpawnChanceMax = getInt("wandering-trader.spawn-chance-max", wanderingTraderSpawnChanceMax);
     }

-    public boolean fixClimbingBypassingCrammingRule = false;
+    public boolean fixClimbingBypassingCrammingRule = true;
     private void fixClimbingBypassingCrammingRule() {
         fixClimbingBypassingCrammingRule = getBoolean("fix-climbing-bypassing-cramming-rule", fixClimbingBypassingCrammingRule);
     }
@@ -200,9 +200,9 @@ public class PaperWorldConfig {
         }
     }

-    public int maxAutoSaveChunksPerTick = 24;
+    public int maxAutoSaveChunksPerTick = 6;
     private void maxAutoSaveChunksPerTick() {
-        maxAutoSaveChunksPerTick = getInt("max-auto-save-chunks-per-tick", 24);
+        maxAutoSaveChunksPerTick = getInt("max-auto-save-chunks-per-tick", 6);
     }

     private boolean getBoolean(String path, boolean def) {
@@ -285,7 +285,7 @@ public class PaperWorldConfig {

     public boolean nerfedMobsShouldJump;
     private void nerfedMobsShouldJump() {
-        nerfedMobsShouldJump = getBoolean("spawner-nerfed-mobs-should-jump", false);
+        nerfedMobsShouldJump = getBoolean("spawner-nerfed-mobs-should-jump", true);
     }

     public final Reference2IntMap<MobCategory> softDespawnDistances = new Reference2IntOpenHashMap<>(MobCategory.values().length);
@@ -360,7 +360,7 @@ public class PaperWorldConfig {

     public boolean optimizeExplosions;
     private void optimizeExplosions() {
-        optimizeExplosions = getBoolean("optimize-explosions", false);
+        optimizeExplosions = getBoolean("optimize-explosions", true);
         log("Optimize explosions: " + optimizeExplosions);
     }

@@ -381,17 +381,17 @@ public class PaperWorldConfig {

     public int mobSpawnerTickRate;
     private void mobSpawnerTickRate() {
-        mobSpawnerTickRate = getInt("mob-spawner-tick-rate", 1);
+        mobSpawnerTickRate = getInt("mob-spawner-tick-rate", 2);
     }

     public int containerUpdateTickRate;
     private void containerUpdateTickRate() {
-        containerUpdateTickRate = getInt("container-update-tick-rate", 1);
+        containerUpdateTickRate = getInt("container-update-tick-rate", 3);
     }

     public boolean disableChestCatDetection;
     private void disableChestCatDetection() {
-        disableChestCatDetection = getBoolean("game-mechanics.disable-chest-cat-detection", false);
+        disableChestCatDetection = getBoolean("game-mechanics.disable-chest-cat-detection", true);
     }

     public boolean disablePlayerCrits;
@@ -423,14 +423,14 @@ public class PaperWorldConfig {
         nonPlayerEntitiesOnScoreboards = getBoolean("allow-non-player-entities-on-scoreboards", false);
     }

-    public int nonPlayerArrowDespawnRate = -1;
-    public int creativeArrowDespawnRate = -1;
+    public int nonPlayerArrowDespawnRate = 20;
+    public int creativeArrowDespawnRate = 20;
     private void nonPlayerArrowDespawnRate() {
-        nonPlayerArrowDespawnRate = getInt("non-player-arrow-despawn-rate", -1);
+        nonPlayerArrowDespawnRate = getInt("non-player-arrow-despawn-rate", 20);
         if (nonPlayerArrowDespawnRate == -1) {
             nonPlayerArrowDespawnRate = spigotConfig.arrowDespawnRate;
         }
-        creativeArrowDespawnRate = getInt("creative-arrow-despawn-rate", -1);
+        creativeArrowDespawnRate = getInt("creative-arrow-despawn-rate", 20);
         if (creativeArrowDespawnRate == -1) {
             creativeArrowDespawnRate = spigotConfig.arrowDespawnRate;
         }
@@ -542,7 +542,7 @@ public class PaperWorldConfig {

     public int maxCollisionsPerEntity;
     private void maxEntityCollision() {
-        maxCollisionsPerEntity = getInt( "max-entity-collisions", this.spigotConfig.getInt("max-entity-collisions", 8) );
+        maxCollisionsPerEntity = getInt( "max-entity-collisions", this.spigotConfig.getInt("max-entity-collisions", 2) );
         log( "Max Entity Collisions: " + maxCollisionsPerEntity );
     }

@@ -603,12 +603,12 @@ public class PaperWorldConfig {
         ironGolemsCanSpawnInAir = getBoolean("iron-golems-can-spawn-in-air", ironGolemsCanSpawnInAir);
     }

-    public boolean armorStandEntityLookups = true;
+    public boolean armorStandEntityLookups = false;
     private void armorStandEntityLookups() {
-        armorStandEntityLookups = getBoolean("armor-stands-do-collision-entity-lookups", true);
+        armorStandEntityLookups = getBoolean("armor-stands-do-collision-entity-lookups", false);
     }

-    public boolean armorStandTick = true;
+    public boolean armorStandTick = false;
     private void armorStandTick() {
         this.armorStandTick = this.getBoolean("armor-stands-tick", this.armorStandTick);
         log("ArmorStand ticking is " + (this.armorStandTick ? "enabled" : "disabled") + " by default");
@@ -620,9 +620,9 @@ public class PaperWorldConfig {
         log("Water over lava flow speed: " + waterOverLavaFlowSpeed);
     }

-    public boolean preventMovingIntoUnloadedChunks = false;
+    public boolean preventMovingIntoUnloadedChunks = true;
     private void preventMovingIntoUnloadedChunks() {
-        preventMovingIntoUnloadedChunks = getBoolean("prevent-moving-into-unloaded-chunks", false);
+        preventMovingIntoUnloadedChunks = getBoolean("prevent-moving-into-unloaded-chunks", true);
     }

     public enum DuplicateUUIDMode {
@@ -706,7 +706,7 @@ public class PaperWorldConfig {
     }

     public boolean cooldownHopperWhenFull = true;
-    public boolean disableHopperMoveEvents = false;
+    public boolean disableHopperMoveEvents = true;
     public boolean hoppersIgnoreOccludingBlocks = true;
     private void hopperOptimizations() {
         cooldownHopperWhenFull = getBoolean("hopper.cooldown-when-full", cooldownHopperWhenFull);
@@ -783,15 +783,16 @@ public class PaperWorldConfig {
         }
     }

-    public boolean altItemDespawnRateEnabled;
+    public boolean altItemDespawnRateEnabled = true;
     public java.util.Map<org.bukkit.Material, Integer> altItemDespawnRateMap;
     private void altItemDespawnRate() {
         String path = "alt-item-despawn-rate";

-        altItemDespawnRateEnabled = getBoolean(path + ".enabled", false);
+        altItemDespawnRateEnabled = getBoolean(path + ".enabled", true);

         java.util.Map<org.bukkit.Material, Integer> altItemDespawnRateMapDefault = new java.util.EnumMap<>(org.bukkit.Material.class);
         altItemDespawnRateMapDefault.put(org.bukkit.Material.COBBLESTONE, 300);
+        altItemDespawnRateMapDefault.put(org.bukkit.Material.NETHERRACK, 300);
         for (org.bukkit.Material key : altItemDespawnRateMapDefault.keySet()) {
             config.addDefault("world-settings.default." + path + ".items." + key, altItemDespawnRateMapDefault.get(key));
         }
@@ -879,7 +880,7 @@ public class PaperWorldConfig {
         enderDragonsDeathAlwaysPlacesDragonEgg = getBoolean("ender-dragons-death-always-places-dragon-egg", enderDragonsDeathAlwaysPlacesDragonEgg);
     }

-    public boolean updatePathfindingOnBlockUpdate = true;
+    public boolean updatePathfindingOnBlockUpdate = false;
     private void setUpdatePathfindingOnBlockUpdate() {
         updatePathfindingOnBlockUpdate = getBoolean("update-pathfinding-on-block-update", this.updatePathfindingOnBlockUpdate);
     }
diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java
index bca9a9a9d..7d2f32459 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java
@@ -98,14 +98,14 @@ public class DedicatedServerProperties extends Settings<DedicatedServerPropertie
         //this.snooperEnabled = false; // Patina - completely remove snooper
         this.useNativeTransport = this.get("use-native-transport", true);
         this.enableCommandBlock = this.get("enable-command-block", false);
-        this.spawnProtection = this.get("spawn-protection", 16);
+        this.spawnProtection = this.get("spawn-protection", -1);
         this.opPermissionLevel = this.get("op-permission-level", 4);
         this.functionPermissionLevel = this.get("function-permission-level", 2);
         this.maxTickTime = this.get("max-tick-time", TimeUnit.MINUTES.toMillis(1L));
         this.rateLimitPacketsPerSecond = this.get("rate-limit", 0);
-        this.viewDistance = this.get("view-distance", 10);
+        this.viewDistance = this.get("view-distance", 8);
         this.maxPlayers = this.get("max-players", 20);
-        this.networkCompressionThreshold = this.get("network-compression-threshold", 256);
+        this.networkCompressionThreshold = this.get("network-compression-threshold", 512);
         this.broadcastRconToOps = this.get("broadcast-rcon-to-ops", true);
         this.broadcastConsoleToOps = this.get("broadcast-console-to-ops", true);
         this.maxWorldSize = this.get("max-world-size", (integer) -> {
diff --git a/src/main/java/net/pl3x/purpur/PurpurConfig.java b/src/main/java/net/pl3x/purpur/PurpurConfig.java
index 0867a45c1..59aa6d582 100644
--- a/src/main/java/net/pl3x/purpur/PurpurConfig.java
+++ b/src/main/java/net/pl3x/purpur/PurpurConfig.java
@@ -232,7 +232,7 @@ public class PurpurConfig {
         laggingThreshold = getDouble("settings.lagging-threshold", laggingThreshold);
     }

-    public static boolean useAlternateKeepAlive = false;
+    public static boolean useAlternateKeepAlive = true;
     private static void useAlternateKeepAlive() {
         useAlternateKeepAlive = getBoolean("settings.use-alternate-keepalive", useAlternateKeepAlive);
     }
@@ -364,7 +364,7 @@ public class PurpurConfig {
         if (endermanShortHeight) EntityType.ENDERMAN.setDimensions(EntityDimensions.scalable(0.6F, 1.9F));
     }

-    public static boolean dontSendUselessEntityPackets = false;
+    public static boolean dontSendUselessEntityPackets = true;
     private static void dontSendUselessEntityPackets() {
         dontSendUselessEntityPackets = getBoolean("settings.dont-send-useless-entity-packets", dontSendUselessEntityPackets);
     }
diff --git a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
index d60fefd41..f3784fb38 100644
--- a/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
+++ b/src/main/java/net/pl3x/purpur/PurpurWorldConfig.java
@@ -354,7 +354,7 @@ public class PurpurWorldConfig {
     public boolean playerInvulnerableWhileAcceptingResourcePack = false;
     public String playerDeathExpDropEquation = "expLevel * 7";
     public int playerDeathExpDropMax = 100;
-    public boolean teleportIfOutsideBorder = false;
+    public boolean teleportIfOutsideBorder = true;
     public boolean totemOfUndyingWorksInInventory = false;
     public boolean playerFixStuckPortal = false;
     public boolean creativeOnePunch = false;
@@ -2385,7 +2385,7 @@ public class PurpurWorldConfig {
     public boolean villagerRidable = false;
     public boolean villagerRidableInWater = false;
     public double villagerMaxHealth = 20.0D;
-    public int villagerBrainTicks = 1;
+    public int villagerBrainTicks = 2;
     public boolean villagerUseBrainTicksOnlyWhenLagging = true;
     public boolean villagerFollowEmeraldBlock = false;
     public boolean villagerCanBeLeashed = false;
@@ -2393,7 +2393,7 @@ public class PurpurWorldConfig {
     public int villagerSpawnIronGolemLimit = 0;
     public boolean villagerCanBreed = true;
     public int villagerBreedingTicks = 6000;
-    public boolean villagerLobotomizeEnabled = false;
+    public boolean villagerLobotomizeEnabled = true;
     public int villagerLobotomizeCheck = 60;
     public boolean villagerClericsFarmWarts = false;
     public boolean villagerClericFarmersThrowWarts = true;
diff --git a/src/main/java/org/spigotmc/SpigotWorldConfig.java b/src/main/java/org/spigotmc/SpigotWorldConfig.java
index fe51e2836..9ce710864 100644
--- a/src/main/java/org/spigotmc/SpigotWorldConfig.java
+++ b/src/main/java/org/spigotmc/SpigotWorldConfig.java
@@ -132,14 +132,14 @@ public class SpigotWorldConfig
     public double itemMerge;
     private void itemMerge()
     {
-        this.itemMerge = this.getDouble("merge-radius.item", 2.5 );
+        this.itemMerge = this.getDouble("merge-radius.item", 4.0 );
         this.log( "Item Merge Radius: " + this.itemMerge );
     }

     public double expMerge;
     private void expMerge()
     {
-        this.expMerge = this.getDouble("merge-radius.exp", 3.0 );
+        this.expMerge = this.getDouble("merge-radius.exp", 6.0 );
         this.log( "Experience Merge Radius: " + this.expMerge );
     }

@@ -176,10 +176,10 @@ public class SpigotWorldConfig
         this.log( "Item Despawn Rate: " + this.itemDespawnRate );
     }

-    public int animalActivationRange = 32;
-    public int monsterActivationRange = 32;
+    public int animalActivationRange = 16;
+    public int monsterActivationRange = 24;
     public int raiderActivationRange = 48;
-    public int miscActivationRange = 16;
+    public int miscActivationRange = 8;
     // Paper start
     public int flyingMonsterActivationRange = 32;
     public int waterActivationRange = 16;
@@ -200,7 +200,7 @@ public class SpigotWorldConfig
     public int villagersWorkImmunityFor = 20;
     public boolean villagersActiveForPanic = true;
     // Paper end
-    public boolean tickInactiveVillagers = true;
+    public boolean tickInactiveVillagers = false;
     private void activationRange()
     {
         boolean hasAnimalsConfig = config.getInt("entity-activation-range.animals", this.animalActivationRange) != this.animalActivationRange; // Paper
@@ -272,7 +272,7 @@ public class SpigotWorldConfig
     public int tridentDespawnRate;
     private void arrowDespawnRate()
     {
-        this.arrowDespawnRate = this.getInt( "arrow-despawn-rate", 1200 );
+        this.arrowDespawnRate = this.getInt( "arrow-despawn-rate", 300 );
         this.tridentDespawnRate = this.getInt( "trident-despawn-rate", this.arrowDespawnRate );
         this.log( "Arrow Despawn Rate: " + this.arrowDespawnRate + " Trident Respawn Rate:" + this.tridentDespawnRate );
     }
@@ -287,7 +287,7 @@ public class SpigotWorldConfig
     public boolean nerfSpawnerMobs;
     private void nerfSpawnerMobs()
     {
-        this.nerfSpawnerMobs = this.getBoolean( "nerf-spawner-mobs", false );
+        this.nerfSpawnerMobs = this.getBoolean( "nerf-spawner-mobs", true );
         this.log( "Nerfing mobs spawned from spawners: " + this.nerfSpawnerMobs );
     }

diff --git a/src/main/resources/configurations/bukkit.yml b/src/main/resources/configurations/bukkit.yml
index 236ffc5a5..9b18d7d44 100644
--- a/src/main/resources/configurations/bukkit.yml
+++ b/src/main/resources/configurations/bukkit.yml
@@ -24,20 +24,20 @@ settings:
     shutdown-message: Server closed
     minimum-api: none
 spawn-limits:
-    monsters: 70
-    animals: 10
-    water-animals: 5
-    water-ambient: 20
-    water-underground-creature: 5
-    ambient: 15
+    monsters: 50
+    animals: 8
+    water-animals: 8
+    water-ambient: 8
+    water-underground-creature: 8
+    ambient: 1
 chunk-gc:
-    period-in-ticks: 600
+    period-in-ticks: 400
 ticks-per:
     animal-spawns: 400
-    monster-spawns: 1
-    water-spawns: 1
-    water-ambient-spawns: 1
-    water-underground-creature-spawns: 1
-    ambient-spawns: 1
+    monster-spawns: 4
+    water-spawns: 8
+    water-ambient-spawns: 16
+    water-underground-creature-spawns: 16
+    ambient-spawns: 24
     autosave: 6000
 aliases: now-in-commands.yml
