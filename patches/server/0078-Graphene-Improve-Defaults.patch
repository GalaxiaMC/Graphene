From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: notsatvrn <satvrn@disroot.org>
Date: Sat, 11 Dec 2021 03:25:00 +0000
Subject: [PATCH] Improve Defaults


diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
index 1fa17557091e430559ed7645090b26a0bcb2c8fc..f8aea0598ccb04f92b632148d970a8a6c5ade7f9 100644
--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
@@ -58,8 +58,8 @@ public class PaperWorldConfig {
         if (PaperConfig.version < 24) {
             needsSave = true;

-            set("despawn-ranges.soft", null);
-            set("despawn-ranges.hard", null);
+            set("despawn-ranges.soft", 28);
+            set("despawn-ranges.hard", 96);

             set("spawn-limits.monsters", null);
             set("spawn-limits.animals", null);
@@ -90,7 +90,7 @@ public class PaperWorldConfig {
     public enum RedstoneImplementation {
         VANILLA, EIGENCRAFT, ALTERNATE_CURRENT
     }
-    public RedstoneImplementation redstoneImplementation = RedstoneImplementation.VANILLA;
+    public RedstoneImplementation redstoneImplementation = RedstoneImplementation.ALTERNATE_CURRENT;
     private void redstoneImplementation() {
         String implementation;
         if (PaperConfig.version < 27) {
@@ -158,7 +158,7 @@ public class PaperWorldConfig {
         wanderingTraderSpawnChanceMax = getInt("wandering-trader.spawn-chance-max", wanderingTraderSpawnChanceMax);
     }

-    public boolean fixClimbingBypassingCrammingRule = false;
+    public boolean fixClimbingBypassingCrammingRule = true;
     private void fixClimbingBypassingCrammingRule() {
         fixClimbingBypassingCrammingRule = getBoolean("fix-climbing-bypassing-cramming-rule", fixClimbingBypassingCrammingRule);
     }
@@ -242,9 +242,9 @@ public class PaperWorldConfig {
         }
     }

-    public int maxAutoSaveChunksPerTick = 24;
+    public int maxAutoSaveChunksPerTick = 6;
     private void maxAutoSaveChunksPerTick() {
-        maxAutoSaveChunksPerTick = getInt("max-auto-save-chunks-per-tick", 24);
+        maxAutoSaveChunksPerTick = getInt("max-auto-save-chunks-per-tick", 6);
     }

     private boolean getBoolean(String path, boolean def) {
@@ -331,7 +331,7 @@ public class PaperWorldConfig {

     public boolean nerfedMobsShouldJump;
     private void nerfedMobsShouldJump() {
-        nerfedMobsShouldJump = getBoolean("spawner-nerfed-mobs-should-jump", false);
+        nerfedMobsShouldJump = getBoolean("spawner-nerfed-mobs-should-jump", true);
     }

     public final Reference2IntMap<MobCategory> softDespawnDistances = new Reference2IntOpenHashMap<>(MobCategory.values().length);
@@ -406,7 +406,7 @@ public class PaperWorldConfig {

     public boolean optimizeExplosions;
     private void optimizeExplosions() {
-        optimizeExplosions = getBoolean("optimize-explosions", false);
+        optimizeExplosions = getBoolean("optimize-explosions", true);
         log("Optimize explosions: " + optimizeExplosions);
     }

@@ -427,7 +427,7 @@ public class PaperWorldConfig {

     public int mobSpawnerTickRate;
     private void mobSpawnerTickRate() {
-        mobSpawnerTickRate = getInt("mob-spawner-tick-rate", 1);
+        mobSpawnerTickRate = getInt("mob-spawner-tick-rate", 2);
     }

     public Integer waterAnimalMaxSpawnHeight;
@@ -450,12 +450,12 @@ public class PaperWorldConfig {

     public int containerUpdateTickRate;
     private void containerUpdateTickRate() {
-        containerUpdateTickRate = getInt("container-update-tick-rate", 1);
+        containerUpdateTickRate = getInt("container-update-tick-rate", 3);
     }

     public boolean disableChestCatDetection;
     private void disableChestCatDetection() {
-        disableChestCatDetection = getBoolean("game-mechanics.disable-chest-cat-detection", false);
+        disableChestCatDetection = getBoolean("game-mechanics.disable-chest-cat-detection", true);
     }

     public boolean disablePlayerCrits;
@@ -456,7 +456,7 @@ public class PaperWorldConfig {
         fixedInhabitedTime = getInt("fixed-chunk-inhabited-time", -1);
     }

-    public int grassUpdateRate = 1;
+    public int grassUpdateRate = 4;
     private void grassUpdateRate() {
         grassUpdateRate = Math.max(0, getInt("grass-spread-tick-rate", grassUpdateRate));
         log("Grass Spread Tick Rate: " + grassUpdateRate);
@@ -497,14 +497,14 @@ public class PaperWorldConfig {
         nonPlayerEntitiesOnScoreboards = getBoolean("allow-non-player-entities-on-scoreboards", false);
     }

-    public int nonPlayerArrowDespawnRate = -1;
-    public int creativeArrowDespawnRate = -1;
+    public int nonPlayerArrowDespawnRate = 20;
+    public int creativeArrowDespawnRate = 20;
     private void nonPlayerArrowDespawnRate() {
-        nonPlayerArrowDespawnRate = getInt("non-player-arrow-despawn-rate", -1);
+        nonPlayerArrowDespawnRate = getInt("non-player-arrow-despawn-rate", 20);
         if (nonPlayerArrowDespawnRate == -1) {
             nonPlayerArrowDespawnRate = spigotConfig.arrowDespawnRate;
         }
-        creativeArrowDespawnRate = getInt("creative-arrow-despawn-rate", -1);
+        creativeArrowDespawnRate = getInt("creative-arrow-despawn-rate", 20);
         if (creativeArrowDespawnRate == -1) {
             creativeArrowDespawnRate = spigotConfig.arrowDespawnRate;
         }
@@ -612,7 +612,7 @@ public class PaperWorldConfig {
         treasureMapsAlreadyDiscoveredLootTable = getBooleanOrNull("treasure-maps-find-already-discovered.loot-tables", treasureMapsAlreadyDiscoveredLootTable);
     }

-    public int maxCollisionsPerEntity = 8;
+    public int maxCollisionsPerEntity = 2;
     private void maxEntityCollision() {
         maxCollisionsPerEntity = getInt( "max-entity-collisions", this.spigotConfig.getInt("max-entity-collisions", this.maxCollisionsPerEntity, false) );
         log( "Max Entity Collisions: " + maxCollisionsPerEntity );
@@ -656,12 +656,12 @@ public class PaperWorldConfig {
         ironGolemsCanSpawnInAir = getBoolean("iron-golems-can-spawn-in-air", ironGolemsCanSpawnInAir);
     }

-    public boolean armorStandEntityLookups = true;
+    public boolean armorStandEntityLookups = false;
     private void armorStandEntityLookups() {
-        armorStandEntityLookups = getBoolean("armor-stands-do-collision-entity-lookups", true);
+        armorStandEntityLookups = getBoolean("armor-stands-do-collision-entity-lookups", false);
     }

-    public boolean armorStandTick = true;
+    public boolean armorStandTick = false;
     private void armorStandTick() {
         this.armorStandTick = this.getBoolean("armor-stands-tick", this.armorStandTick);
         log("ArmorStand ticking is " + (this.armorStandTick ? "enabled" : "disabled") + " by default");
@@ -673,9 +673,9 @@ public class PaperWorldConfig {
         log("Water over lava flow speed: " + waterOverLavaFlowSpeed);
     }

-    public boolean preventMovingIntoUnloadedChunks = false;
+    public boolean preventMovingIntoUnloadedChunks = true;
     private void preventMovingIntoUnloadedChunks() {
-        preventMovingIntoUnloadedChunks = getBoolean("prevent-moving-into-unloaded-chunks", false);
+        preventMovingIntoUnloadedChunks = getBoolean("prevent-moving-into-unloaded-chunks", true);
     }

     public enum DuplicateUUIDMode {
@@ -758,7 +758,7 @@ public class PaperWorldConfig {
     }

     public boolean cooldownHopperWhenFull = true;
-    public boolean disableHopperMoveEvents = false;
+    public boolean disableHopperMoveEvents = true;
     public boolean hoppersIgnoreOccludingBlocks = false;
     private void hopperOptimizations() {
         cooldownHopperWhenFull = getBoolean("hopper.cooldown-when-full", cooldownHopperWhenFull);
@@ -883,11 +883,12 @@ public class PaperWorldConfig {
             }
         }

-        altItemDespawnRateEnabled = getBoolean(path + ".enabled", false);
+        altItemDespawnRateEnabled = getBoolean(path + ".enabled", true);

         if (config.getConfigurationSection("world-settings.default." + path + ".items") == null) {
             // Initialize default
             config.addDefault("world-settings.default." + path + ".items.cobblestone", 300);
+            config.addDefault("world-settings.default." + path + ".items.netherrack", 300);
         }

         if (!altItemDespawnRateEnabled) {
@@ -932,7 +933,7 @@ public class PaperWorldConfig {
         enderDragonsDeathAlwaysPlacesDragonEgg = getBoolean("ender-dragons-death-always-places-dragon-egg", enderDragonsDeathAlwaysPlacesDragonEgg);
     }

-    public boolean updatePathfindingOnBlockUpdate = true;
+    public boolean updatePathfindingOnBlockUpdate = false;
     private void setUpdatePathfindingOnBlockUpdate() {
         updatePathfindingOnBlockUpdate = getBoolean("update-pathfinding-on-block-update", this.updatePathfindingOnBlockUpdate);
     }
diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java
index 8153f1aa510474d2f831799a1c1495589eca0b14..26a81f840eea93e66d740afbf16d916342c1cd46 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServerProperties.java
@@ -98,15 +98,15 @@ public class DedicatedServerProperties extends Settings<DedicatedServerPropertie
         this.spawnMonsters = this.get("spawn-monsters", true);
         this.useNativeTransport = this.get("use-native-transport", true);
         this.enableCommandBlock = this.get("enable-command-block", false);
-        this.spawnProtection = this.get("spawn-protection", 16);
+        this.spawnProtection = this.get("spawn-protection", -1);
         this.opPermissionLevel = this.get("op-permission-level", 4);
         this.functionPermissionLevel = this.get("function-permission-level", 2);
         this.maxTickTime = this.get("max-tick-time", TimeUnit.MINUTES.toMillis(1L));
         this.rateLimitPacketsPerSecond = this.get("rate-limit", 0);
-        this.viewDistance = this.get("view-distance", 10);
-        this.simulationDistance = this.get("simulation-distance", 10);
+        this.viewDistance = this.get("view-distance", 8);
+        this.simulationDistance = this.get("simulation-distance", 8);
         this.maxPlayers = this.get("max-players", 20);
-        this.networkCompressionThreshold = this.get("network-compression-threshold", 256);
+        this.networkCompressionThreshold = this.get("network-compression-threshold", 512);
         this.broadcastRconToOps = this.get("broadcast-rcon-to-ops", true);
         this.broadcastConsoleToOps = this.get("broadcast-console-to-ops", true);
         this.maxWorldSize = this.get("max-world-size", (integer) -> {
diff --git a/src/main/java/org/purpurmc/purpur/PurpurConfig.java b/src/main/java/org/purpurmc/purpur/PurpurConfig.java
index 279ca7f868e3a095d01223d73dc6738a6f711969..31c418333a0922de715e356df08c24bea732a259 100644
--- a/src/main/java/org/purpurmc/purpur/PurpurConfig.java
+++ b/src/main/java/org/purpurmc/purpur/PurpurConfig.java
@@ -245,7 +245,7 @@ public class PurpurConfig {
         laggingThreshold = getDouble("settings.lagging-threshold", laggingThreshold);
     }

-    public static boolean useAlternateKeepAlive = false;
+    public static boolean useAlternateKeepAlive = true;
     private static void useAlternateKeepAlive() {
         useAlternateKeepAlive = getBoolean("settings.use-alternate-keepalive", useAlternateKeepAlive);
     }
diff --git a/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java b/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java
index aefbd3e53d3b608d58b6f051bc775eedb1edc397..2d8d079fdbab1e363c61279337b9b44f3ccbdee2 100644
--- a/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java
+++ b/src/main/java/org/purpurmc/purpur/PurpurWorldConfig.java
@@ -402,7 +402,7 @@ public class PurpurWorldConfig {
     public boolean playerInvulnerableWhileAcceptingResourcePack = false;
     public String playerDeathExpDropEquation = "expLevel * 7";
     public int playerDeathExpDropMax = 100;
-    public boolean teleportIfOutsideBorder = false;
+    public boolean teleportIfOutsideBorder = true;
     public boolean totemOfUndyingWorksInInventory = false;
     public boolean playerFixStuckPortal = false;
     public boolean creativeOnePunch = false;
@@ -2663,7 +2663,7 @@ public class PurpurWorldConfig {
     public boolean villagerRidableInWater = false;
     public boolean villagerControllable = true;
     public double villagerMaxHealth = 20.0D;
-    public int villagerBrainTicks = 1;
+    public int villagerBrainTicks = 2;
     public boolean villagerUseBrainTicksOnlyWhenLagging = true;
     public boolean villagerFollowEmeraldBlock = false;
     public boolean villagerCanBeLeashed = false;
@@ -2678,7 +2678,7 @@ public class PurpurWorldConfig {
     public boolean villagerAllowTrading = true;
     public boolean villagerAlwaysDropExp = false;
     public int villagerMinimumDemand = 0;
-    public boolean villagerLobotomizeEnabled = false;
+    public boolean villagerLobotomizeEnabled = true;
     public int villagerLobotomizeCheckInterval = 100;
     public boolean villagerDisplayTradeItem = true;
     private void villagerSettings() {
diff --git a/src/main/java/org/spigotmc/SpigotWorldConfig.java b/src/main/java/org/spigotmc/SpigotWorldConfig.java
index 31a447e6e156b7b244b2ac69a9c03c09c7ed388c..de33f4f2a90c067a47f61aff04f388fc6801cf6d 100644
--- a/src/main/java/org/spigotmc/SpigotWorldConfig.java
+++ b/src/main/java/org/spigotmc/SpigotWorldConfig.java
@@ -150,14 +150,14 @@ public class SpigotWorldConfig
     public double itemMerge;
     private void itemMerge()
     {
-        this.itemMerge = this.getDouble("merge-radius.item", 2.5 );
+        this.itemMerge = this.getDouble("merge-radius.item", 4.0 );
         this.log( "Item Merge Radius: " + this.itemMerge );
     }

     public double expMerge;
     private void expMerge()
     {
-        this.expMerge = this.getDouble("merge-radius.exp", 3.0 );
+        this.expMerge = this.getDouble("merge-radius.exp", 6.0 );
         this.log( "Experience Merge Radius: " + this.expMerge );
     }

@@ -196,7 +196,7 @@ public class SpigotWorldConfig
     public byte mobSpawnRange;
     private void mobSpawnRange()
     {
-        this.mobSpawnRange = (byte) getInt( "mob-spawn-range", 8 ); // Paper - Vanilla
+        this.mobSpawnRange = (byte) getInt( "mob-spawn-range", 4 ); // Paper - Vanilla
         this.log( "Mob Spawn Range: " + this.mobSpawnRange );
     }

@@ -207,14 +207,14 @@ public class SpigotWorldConfig
         this.log( "Item Despawn Rate: " + this.itemDespawnRate );
     }

-    public int animalActivationRange = 32;
-    public int monsterActivationRange = 32;
+    public int animalActivationRange = 16;
+    public int monsterActivationRange = 24;
     public int raiderActivationRange = 48;
-    public int miscActivationRange = 16;
+    public int miscActivationRange = 8;
     // Paper start
     public int flyingMonsterActivationRange = 32;
-    public int waterActivationRange = 16;
-    public int villagerActivationRange = 32;
+    public int waterActivationRange = 12;
+    public int villagerActivationRange = 24;
     public int wakeUpInactiveAnimals = 4;
     public int wakeUpInactiveAnimalsEvery = 60*20;
     public int wakeUpInactiveAnimalsFor = 5*20;
@@ -231,7 +231,7 @@ public class SpigotWorldConfig
     public int villagersWorkImmunityFor = 20;
     public boolean villagersActiveForPanic = true;
     // Paper end
-    public boolean tickInactiveVillagers = true;
+    public boolean tickInactiveVillagers = false;
     public boolean ignoreSpectatorActivation = false;
     private void activationRange()
     {
@@ -305,7 +305,7 @@ public class SpigotWorldConfig
     public int tridentDespawnRate;
     private void arrowDespawnRate()
     {
-        this.arrowDespawnRate = this.getInt( "arrow-despawn-rate", 1200 );
+        this.arrowDespawnRate = this.getInt( "arrow-despawn-rate", 300 );
         this.tridentDespawnRate = this.getInt( "trident-despawn-rate", this.arrowDespawnRate );
         this.log( "Arrow Despawn Rate: " + this.arrowDespawnRate + " Trident Respawn Rate:" + this.tridentDespawnRate );
     }
@@ -320,7 +320,7 @@ public class SpigotWorldConfig
     public boolean nerfSpawnerMobs;
     private void nerfSpawnerMobs()
     {
-        this.nerfSpawnerMobs = this.getBoolean( "nerf-spawner-mobs", false );
+        this.nerfSpawnerMobs = this.getBoolean( "nerf-spawner-mobs", true );
         this.log( "Nerfing mobs spawned from spawners: " + this.nerfSpawnerMobs );
     }

diff --git a/src/main/resources/configurations/bukkit.yml b/src/main/resources/configurations/bukkit.yml
index 97239f7aadd761f6f709a6d6c913e577651a87df..6f9ed88ff9fb56cfa04f468a654524a4440b4f63 100644
--- a/src/main/resources/configurations/bukkit.yml
+++ b/src/main/resources/configurations/bukkit.yml
@@ -23,22 +23,22 @@ settings:
     shutdown-message: Server closed
     minimum-api: none
 spawn-limits:
-    monsters: 70
-    animals: 10
-    water-animals: 5
-    water-ambient: 20
-    water-underground-creature: 5
+    monsters: 50
+    animals: 8
+    water-animals: 8
+    water-ambient: 8
+    water-underground-creature: 8
     axolotls: 5
-    ambient: 15
+    ambient: 1
 chunk-gc:
-    period-in-ticks: 600
+    period-in-ticks: 400
 ticks-per:
     animal-spawns: 400
-    monster-spawns: 1
-    water-spawns: 1
-    water-ambient-spawns: 1
-    water-underground-creature-spawns: 1
-    axolotl-spawns: 1
-    ambient-spawns: 1
+    monster-spawns: 4
+    water-spawns: 8
+    water-ambient-spawns: 16
+    water-underground-creature-spawns: 16
+    axolotl-spawns: 8
+    ambient-spawns: 24
     autosave: 6000
 aliases: now-in-commands.yml
diff --git a/src/main/java/com/destroystokyo/paper/PaperConfig.java b/src/main/java/com/destroystokyo/paper/PaperConfig.java
index 35c98c47df7066ee7dc1c4da838a94293cdfce2f..e5f1cd597ea076f7f4879f841df129e3a12ad265 100644
--- a/src/main/java/com/destroystokyo/paper/PaperConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperConfig.java
@@ -253,11 +253,11 @@ public class PaperConfig {
         timings = reallyEnableTimings;
         // Pufferfish end
         boolean verboseTimings = getBoolean("timings.verbose", true);
-        TimingsManager.url = getString("timings.url", "https://timings.aikar.co/");
+        TimingsManager.url = getString("timings.url", "https://timin.gs/");
         // Purpur start
         if (org.purpurmc.purpur.PurpurConfig.version < 23 && TimingsManager.url.contains("timings.pl3x.net")) {
-            set("timings.url", "https://timings.aikar.co/");
-            TimingsManager.url = "https://timings.aikar.co/";
+            set("timings.url", "https://timin.gs/");
+            TimingsManager.url = "https://timin.gs/";
         }
         // Purpur end
         if (!TimingsManager.url.endsWith("/")) {
diff --git a/src/main/java/gg/pufferfish/pufferfish/PufferfishConfig.java b/src/main/java/gg/pufferfish/pufferfish/PufferfishConfig.java
index 7572cbc662a5b824435d75e1b3b7ea0e58144c9c..2f1e4cd4329bff2296d4e1cdf6c1d25cb4d1b8e6 100644
--- a/src/main/java/gg/pufferfish/pufferfish/PufferfishConfig.java
+++ b/src/main/java/gg/pufferfish/pufferfish/PufferfishConfig.java
@@ -216,8 +216,8 @@ public class PufferfishConfig {
     public static int maxProjectileLoadsPerTick;
     public static int maxProjectileLoadsPerProjectile;
     private static void projectileLoading() {
-        maxProjectileLoadsPerTick = getInt("projectile.max-loads-per-tick", 10, "Controls how many chunks are allowed", "to be sync loaded by projectiles in a tick.");
-        maxProjectileLoadsPerProjectile = getInt("projectile.max-loads-per-projectile", 10, "Controls how many chunks a projectile", "can load in its lifetime before it gets", "automatically removed.");
+        maxProjectileLoadsPerTick = getInt("projectile.max-loads-per-tick", 8, "Controls how many chunks are allowed", "to be sync loaded by projectiles in a tick.");
+        maxProjectileLoadsPerProjectile = getInt("projectile.max-loads-per-projectile", 8, "Controls how many chunks a projectile", "can load in its lifetime before it gets", "automatically removed.");

         setComment("projectile", "Optimizes projectile settings");
     }
