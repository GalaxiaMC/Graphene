From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Tom <cryptite@gmail.com>
Date: Mon, 28 Feb 2022 09:36:31 -0600
Subject: [PATCH] Add player data saving events


diff --git a/src/main/java/net/minecraft/server/level/ServerPlayerGameMode.java b/src/main/java/net/minecraft/server/level/ServerPlayerGameMode.java
index 808c2d1eee0b68419c5726fc842727cd1caeae4f..0c0087a07860172f1a2793ff23313bdbd5b06327 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayerGameMode.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayerGameMode.java
@@ -629,6 +629,8 @@ public class ServerPlayerGameMode {
                     enuminteractionresult1 = stack.useOn(itemactioncontext, hand);
                 }

+                world.pendingPlayerBlockEvents.remove(blockposition); // Paper
+
                 if (enuminteractionresult1.consumesAction()) {
                     CriteriaTriggers.ITEM_USED_ON_BLOCK.trigger(player, blockposition, itemstack1);
                 }
diff --git a/src/main/java/net/minecraft/stats/ServerStatsCounter.java b/src/main/java/net/minecraft/stats/ServerStatsCounter.java
index c59f98ca3adfdd90cdc5999aeadbb0834efedc0f..6e819bd376eb9edee6bf8bd8c08a755599f1514a 100644
--- a/src/main/java/net/minecraft/stats/ServerStatsCounter.java
+++ b/src/main/java/net/minecraft/stats/ServerStatsCounter.java
@@ -201,7 +201,12 @@ public class ServerStatsCounter extends StatsCounter {
         return nbttagcompound;
     }
 
-    protected String toJson() {
+    // Slice start - OBFHELPER
+    public String toJson() {
+        return serialize().toString();
+    }
+
+    public JsonObject serialize() { // Slice end
         Map<StatType<?>, JsonObject> map = Maps.newHashMap();
         ObjectIterator objectiterator = this.stats.object2IntEntrySet().iterator();
 
@@ -227,7 +232,7 @@ public class ServerStatsCounter extends StatsCounter {
 
         jsonobject1.add("stats", jsonobject);
         jsonobject1.addProperty("DataVersion", SharedConstants.getCurrentVersion().getWorldVersion());
-        return jsonobject1.toString();
+        return jsonobject1; // Slice
     }
 
     private static <T> ResourceLocation getKey(Stat<T> stat) {
diff --git a/src/main/java/net/minecraft/world/level/storage/PlayerDataStorage.java b/src/main/java/net/minecraft/world/level/storage/PlayerDataStorage.java
index 555901df4504792133a51d11642192d0df37fff4..becd975753cc8f17d5008fad00a0ab00781e35fb 100644
--- a/src/main/java/net/minecraft/world/level/storage/PlayerDataStorage.java
+++ b/src/main/java/net/minecraft/world/level/storage/PlayerDataStorage.java
@@ -37,6 +37,7 @@ public class PlayerDataStorage {

     public void save(Player player) {
         if (org.spigotmc.SpigotConfig.disablePlayerDataSaving) return; // Spigot
+        if (!new com.destroystokyo.paper.event.player.PlayerSaveDataEvent((org.bukkit.entity.Player) player.getBukkitEntity()).callEvent()) return; // Slice
         try {
             CompoundTag nbttagcompound = player.saveWithoutId(new CompoundTag());
             File file = File.createTempFile(player.getStringUUID() + "-", ".dat", this.playerDir);
@@ -69,6 +70,14 @@ public class PlayerDataStorage {
     public CompoundTag load(Player player) {
         CompoundTag nbttagcompound = null;

+        // Slice start - If event supplies playerdata, use it. Otherwise just load from disk as usual
+        com.destroystokyo.paper.event.player.PlayerLoadDataEvent event = new com.destroystokyo.paper.event.player.PlayerLoadDataEvent(player.getUUID());
+        org.bukkit.Bukkit.getPluginManager().callEvent(event);
+
+        Object loadPlayerData = event.getPlayerData();
+        if (loadPlayerData != null) {
+            nbttagcompound = (CompoundTag) loadPlayerData;
+        } else {
         try {
             File file = new File(this.playerDir, player.getStringUUID() + ".dat");
             // Spigot Start
@@ -112,6 +121,7 @@ public class PlayerDataStorage {
         } catch (Exception exception) {
             PlayerDataStorage.LOGGER.warn("Failed to load player data for {}", player.getName().getString());
         }
+        }

         if (nbttagcompound != null) {
             // CraftBukkit start
