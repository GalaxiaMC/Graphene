From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: notsatvrn <satvrn@gmx.com>
Date: Thu, 15 Feb 2024 19:21:05 -0800
Subject: [PATCH] Interstellar: Improve loottable refresh logic


diff --git a/src/main/java/com/destroystokyo/paper/loottable/PaperLootableInventoryData.java b/src/main/java/com/destroystokyo/paper/loottable/PaperLootableInventoryData.java
index b0a42fc9da000f2cd4104e31eb846cdce5b08837..932dc77bd365f5ed2a770a7886036187404891a9 100644
--- a/src/main/java/com/destroystokyo/paper/loottable/PaperLootableInventoryData.java
+++ b/src/main/java/com/destroystokyo/paper/loottable/PaperLootableInventoryData.java
@@ -43,6 +43,13 @@ public class PaperLootableInventoryData {
     }
 
     public boolean shouldReplenish(@Nullable net.minecraft.world.entity.player.Player player) {
+        // Interstellar start - Improve loottable refresh logic (moved up)
+        // Only process refills when a player is set
+        if (player == null) {
+            return false;
+        }
+        // Interstellar end
+
         LootTable table = this.lootable.getLootTable();
 
         // No Loot Table associated
@@ -55,11 +62,6 @@ public class PaperLootableInventoryData {
             return true;
         }
 
-        // Only process refills when a player is set
-        if (player == null) {
-            return false;
-        }
-
         // Chest is not scheduled for refill
         if (this.nextRefill == -1) {
             return false;
diff --git a/src/main/java/net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity.java
index b41635dd0569ff7df909df492d3e850aef7214be..11e770d36f69a3b358f75d70011850c2a25d6bb0 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity.java
@@ -68,11 +68,13 @@ public abstract class RandomizableContainerBlockEntity extends BaseContainerBloc
 
     @Override
     public void unpackLootTable(@org.jetbrains.annotations.Nullable final Player player) {
+        if (this.lootableData.shouldReplenish(player)) return; // Interstellar - Improve loottable refresh logic (move up)
         // Copied from super with changes, always check the original method
         net.minecraft.world.level.Level level = this.getLevel();
+        if (level != null) return; // Interstellar - Improve loottable refresh logic (move up)
         BlockPos blockPos = this.getBlockPos();
         ResourceLocation resourceLocation = this.getLootTable();
-        if (this.lootableData.shouldReplenish(player) && level != null) { // Paper
+        //if (this.lootableData.shouldReplenish(player) && level != null) { // Paper // Interstellar start - Moved up
             net.minecraft.world.level.storage.loot.LootTable lootTable = level.getServer().getLootData().getLootTable(resourceLocation);
             if (player instanceof net.minecraft.server.level.ServerPlayer) {
                 net.minecraft.advancements.CriteriaTriggers.GENERATE_LOOT.trigger((net.minecraft.server.level.ServerPlayer)player, resourceLocation);
@@ -80,12 +82,12 @@ public abstract class RandomizableContainerBlockEntity extends BaseContainerBloc
 
             this.lootableData.processRefill(player); // Paper
             net.minecraft.world.level.storage.loot.LootParams.Builder builder = (new net.minecraft.world.level.storage.loot.LootParams.Builder((net.minecraft.server.level.ServerLevel)level)).withParameter(net.minecraft.world.level.storage.loot.parameters.LootContextParams.ORIGIN, net.minecraft.world.phys.Vec3.atCenterOf(blockPos));
-            if (player != null) {
+            //if (player != null) { // Interstellar start - Moved up
                 builder.withLuck(player.getLuck()).withParameter(net.minecraft.world.level.storage.loot.parameters.LootContextParams.THIS_ENTITY, player);
-            }
+            //} // Interstellar end
 
             lootTable.fill(this, builder.create(net.minecraft.world.level.storage.loot.parameters.LootContextParamSets.CHEST), this.getLootTableSeed());
-        }
+        //} // Interstellar end
 
     }
     // Paper end
