From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Simon Gardling <titaniumtown@gmail.com>
Date: Thu, 30 Dec 2021 20:21:10 -0500
Subject: [PATCH] remove some Pufferfish stuff


diff --git a/build.gradle.kts b/build.gradle.kts
index e4f1b0d9..058fee14 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -42,7 +42,6 @@ dependencies {
     apiAndDocs("net.kyori:adventure-text-serializer-plain")
     api("org.apache.logging.log4j:log4j-api:2.17.1")
     api("org.slf4j:slf4j-api:1.8.0-beta4")
-    api("io.sentry:sentry:5.4.0") // Pufferfish
     api("net.kyori:adventure-text-minimessage:4.1.0-SNAPSHOT") // Purpur
     runtimeOnly("com.zaxxer:HikariCP:5.0.0") // Crunchy
     api("net.kyori:adventure-text-minimessage:4.1.0-SNAPSHOT") // Crunchy
diff --git a/src/main/java/gg/pufferfish/pufferfish/sentry/SentryContext.java b/src/main/java/gg/pufferfish/pufferfish/sentry/SentryContext.java
deleted file mode 100644
index 10310fdd53de28efb8a8250f6d3b0c8eb08fb68a..0000000000000000000000000000000000000000
--- a/src/main/java/gg/pufferfish/pufferfish/sentry/SentryContext.java
+++ /dev/null
@@ -1,161 +0,0 @@
-package gg.pufferfish.pufferfish.sentry;
-
-import com.google.gson.Gson;
-import java.lang.reflect.Field;
-import java.lang.reflect.Modifier;
-import java.util.Map;
-import java.util.TreeMap;
-import org.apache.logging.log4j.ThreadContext;
-import org.bukkit.command.Command;
-import org.bukkit.command.CommandSender;
-import org.bukkit.entity.Player;
-import org.bukkit.event.Event;
-import org.bukkit.event.player.PlayerEvent;
-import org.bukkit.plugin.Plugin;
-import org.bukkit.plugin.RegisteredListener;
-import org.jetbrains.annotations.Nullable;
-
-public class SentryContext {
-	
-	private static final Gson GSON = new Gson();
-	
-	public static void setPluginContext(@Nullable Plugin plugin) {
-		if (plugin != null) {
-			ThreadContext.put("pufferfishsentry_pluginname", plugin.getName());
-			ThreadContext.put("pufferfishsentry_pluginversion", plugin.getDescription().getVersion());
-		}
-	}
-	
-	public static void removePluginContext() {
-		ThreadContext.remove("pufferfishsentry_pluginname");
-		ThreadContext.remove("pufferfishsentry_pluginversion");
-	}
-	
-	public static void setSenderContext(@Nullable CommandSender sender) {
-		if (sender != null) {
-			ThreadContext.put("pufferfishsentry_playername", sender.getName());
-			if (sender instanceof Player player) {
-				ThreadContext.put("pufferfishsentry_playerid", player.getUniqueId().toString());
-			}
-		}
-	}
-	
-	public static void removeSenderContext() {
-		ThreadContext.remove("pufferfishsentry_playername");
-		ThreadContext.remove("pufferfishsentry_playerid");
-	}
-	
-	public static void setEventContext(Event event, RegisteredListener registration) {
-		setPluginContext(registration.getPlugin());
-		
-		try {
-			// Find the player that was involved with this event
-			Player player = null;
-			if (event instanceof PlayerEvent) {
-				player = ((PlayerEvent) event).getPlayer();
-			} else {
-				Class<? extends Event> eventClass = event.getClass();
-				
-				Field playerField = null;
-				
-				for (Field field : eventClass.getDeclaredFields()) {
-					if (field.getType().equals(Player.class)) {
-						playerField = field;
-						break;
-					}
-				}
-				
-				if (playerField != null) {
-					playerField.setAccessible(true);
-					player = (Player) playerField.get(event);
-				}
-			}
-			
-			if (player != null) {
-				setSenderContext(player);
-			}
-		} catch (Exception e) {} // We can't really safely log exceptions.
-		
-		ThreadContext.put("pufferfishsentry_eventdata", GSON.toJson(serializeFields(event)));
-	}
-	
-	public static void removeEventContext() {
-		removePluginContext();
-		removeSenderContext();
-		ThreadContext.remove("pufferfishsentry_eventdata");
-	}
-	
-	private static Map<String, String> serializeFields(Object object) {
-		Map<String, String> fields = new TreeMap<>();
-		fields.put("_class", object.getClass().getName());
-		for (Field declaredField : object.getClass().getDeclaredFields()) {
-			try {
-				if (Modifier.isStatic(declaredField.getModifiers())) {
-					continue;
-				}
-				
-				String fieldName = declaredField.getName();
-				if (fieldName.equals("handlers")) {
-					continue;
-				}
-				declaredField.setAccessible(true);
-				Object value = declaredField.get(object);
-				if (value != null) {
-					fields.put(fieldName, value.toString());
-				} else {
-					fields.put(fieldName, "<null>");
-				}
-			} catch (Exception e) {} // We can't really safely log exceptions.
-		}
-		return fields;
-	}
-	
-	public static class State {
-		
-		private Plugin plugin;
-		private Command command;
-		private String commandLine;
-		private Event event;
-		private RegisteredListener registeredListener;
-		
-		public Plugin getPlugin() {
-			return plugin;
-		}
-		
-		public void setPlugin(Plugin plugin) {
-			this.plugin = plugin;
-		}
-		
-		public Command getCommand() {
-			return command;
-		}
-		
-		public void setCommand(Command command) {
-			this.command = command;
-		}
-		
-		public String getCommandLine() {
-			return commandLine;
-		}
-		
-		public void setCommandLine(String commandLine) {
-			this.commandLine = commandLine;
-		}
-		
-		public Event getEvent() {
-			return event;
-		}
-		
-		public void setEvent(Event event) {
-			this.event = event;
-		}
-		
-		public RegisteredListener getRegisteredListener() {
-			return registeredListener;
-		}
-		
-		public void setRegisteredListener(RegisteredListener registeredListener) {
-			this.registeredListener = registeredListener;
-		}
-	}
-}
diff --git a/src/test/java/org/bukkit/AnnotationTest.java b/src/test/java/org/bukkit/AnnotationTest.java
index 1e66e3dc..808df94e 100644
--- a/src/test/java/org/bukkit/AnnotationTest.java
+++ b/src/test/java/org/bukkit/AnnotationTest.java
@@ -47,10 +47,6 @@ public class AnnotationTest {
         "org/bukkit/plugin/java/PluginClassLoader",
         // Generic functional interface
         "org/bukkit/util/Consumer",
-        // Purpur start
-        "gg/pufferfish/pufferfish/sentry/SentryContext",
-        "gg/pufferfish/pufferfish/sentry/SentryContext$State",
-        // Purpur end
         // Paper start
         "io/papermc/paper/util/TransformingRandomAccessList",
         "io/papermc/paper/util/TransformingRandomAccessList$TransformedListIterator",
diff --git a/src/main/java/org/bukkit/plugin/SimplePluginManager.java b/src/main/java/org/bukkit/plugin/SimplePluginManager.java
index 7339eccc..f4513214 100644
--- a/src/main/java/org/bukkit/plugin/SimplePluginManager.java
+++ b/src/main/java/org/bukkit/plugin/SimplePluginManager.java
@@ -581,13 +581,11 @@ public final class SimplePluginManager implements PluginManager {
 
     // Paper start
     private void handlePluginException(String msg, Throwable ex, Plugin plugin) {
-        gg.pufferfish.pufferfish.sentry.SentryContext.setPluginContext(plugin); // Pufferfish
         // Yatopia start - detailed report
         server.getLogger().log(Level.SEVERE, msg);
         org.yatopiamc.yatopia.api.internal.StackTraceUtils.print(ex, _msg -> server.getLogger().log(Level.SEVERE, _msg));
         server.getLogger().log(Level.SEVERE, org.yatopiamc.yatopia.api.internal.StackTraceUtils.EXCEPTION_DETAILS_BELOW, ex);
         // Yatopia end
-        gg.pufferfish.pufferfish.sentry.SentryContext.removePluginContext(); // Pufferfish
         callEvent(new ServerExceptionEvent(new ServerPluginEnableDisableException(msg, ex, plugin)));
     }
     // Paper end
@@ -658,7 +656,6 @@ public final class SimplePluginManager implements PluginManager {
                             ));
                 }
             } catch (Throwable ex) {
-                gg.pufferfish.pufferfish.sentry.SentryContext.setEventContext(event, registration); // Pufferfish
                 // Paper start - error reporting
                 String msg = "Could not pass event " + event.getEventName() + " to " + registration.getPlugin().getDescription().getFullName();
                 // Yatopia start - detailed report
@@ -666,12 +663,11 @@ public final class SimplePluginManager implements PluginManager {
                 org.yatopiamc.yatopia.api.internal.StackTraceUtils.print(ex, _msg -> server.getLogger().log(Level.SEVERE, _msg));
                 server.getLogger().log(Level.SEVERE, org.yatopiamc.yatopia.api.internal.StackTraceUtils.EXCEPTION_DETAILS_BELOW, ex);
                 // Yatopia end
-                gg.pufferfish.pufferfish.sentry.SentryContext.removeEventContext(); // Pufferfish
                 if (!(event instanceof ServerExceptionEvent)) { // We don't want to cause an endless event loop
                     callEvent(new ServerExceptionEvent(new ServerEventException(msg, ex, registration.getPlugin(), registration.getListener(), event)));
                 }
                 // Paper end
-            } finally { gg.pufferfish.pufferfish.sentry.SentryContext.removeEventContext(); } // Pufferfish
+            }
         }
     }
 
diff --git a/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java b/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java
index 0c27011e..5833c593 100644
--- a/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java
+++ b/src/main/java/org/bukkit/plugin/java/JavaPluginLoader.java
@@ -369,13 +369,11 @@ public final class JavaPluginLoader implements PluginLoader {
             try {
                 jPlugin.setEnabled(true);
             } catch (Throwable ex) {
-                gg.pufferfish.pufferfish.sentry.SentryContext.setPluginContext(plugin); // Pufferfish
                 // Yatopia start - detailed report
                 server.getLogger().log(Level.SEVERE, "Error occurred while enabling " + plugin.getDescription().getFullName() + " (Is it up to date?)");
                 org.yatopiamc.yatopia.api.internal.StackTraceUtils.print(ex, _msg -> server.getLogger().log(Level.SEVERE, _msg));
                 server.getLogger().log(Level.SEVERE, org.yatopiamc.yatopia.api.internal.StackTraceUtils.EXCEPTION_DETAILS_BELOW, ex);
                 // Yatopia end
-                gg.pufferfish.pufferfish.sentry.SentryContext.removePluginContext(); // Pufferfish
                 // Paper start - Disable plugins that fail to load
                 this.server.getPluginManager().disablePlugin(jPlugin);
                 return;
@@ -404,13 +402,11 @@ public final class JavaPluginLoader implements PluginLoader {
             try {
                 jPlugin.setEnabled(false);
             } catch (Throwable ex) {
-                gg.pufferfish.pufferfish.sentry.SentryContext.setPluginContext(plugin); // Pufferfish
                 // Yatopia start - detailed report
                 server.getLogger().log(Level.SEVERE, "Error occurred while disabling " + plugin.getDescription().getFullName() + " (Is it up to date?)");
                 org.yatopiamc.yatopia.api.internal.StackTraceUtils.print(ex, _msg -> server.getLogger().log(Level.SEVERE, _msg));
                 server.getLogger().log(Level.SEVERE, org.yatopiamc.yatopia.api.internal.StackTraceUtils.EXCEPTION_DETAILS_BELOW, ex);
                 // Yatopia end
-                gg.pufferfish.pufferfish.sentry.SentryContext.removePluginContext(); // Pufferfish
             }
 
             if (cloader instanceof PluginClassLoader) {
